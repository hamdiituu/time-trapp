// Mocks generated by Mockito 5.4.4 from annotations
// in time_trapp/test/screens/reports_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:time_trapp/models/app_settings.dart' as _i2;
import 'package:time_trapp/models/task_session.dart' as _i6;
import 'package:time_trapp/providers/timer_provider.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppSettings_1 extends _i1.SmartFake implements _i2.AppSettings {
  _FakeAppSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimerProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerProvider extends _i1.Mock implements _i3.TimerProvider {
  MockTimerProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get elapsedTime => (super.noSuchMethod(
        Invocation.getter(#elapsedTime),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#elapsedTime),
        ),
      ) as Duration);

  @override
  bool get isRunning => (super.noSuchMethod(
        Invocation.getter(#isRunning),
        returnValue: false,
      ) as bool);

  @override
  _i2.AppSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeAppSettings_1(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i2.AppSettings);

  @override
  String get formattedElapsedTime => (super.noSuchMethod(
        Invocation.getter(#formattedElapsedTime),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#formattedElapsedTime),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> startSession({
    required String? purpose,
    required String? goal,
    String? link,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startSession,
          [],
          {
            #purpose: purpose,
            #goal: goal,
            #link: link,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> stopSession() => (super.noSuchMethod(
        Invocation.method(
          #stopSession,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateSettings(_i2.AppSettings? newSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSettings,
          [newSettings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.TaskSession>> getSessionsForDateRange(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionsForDateRange,
          [
            start,
            end,
          ],
        ),
        returnValue:
            _i5.Future<List<_i6.TaskSession>>.value(<_i6.TaskSession>[]),
      ) as _i5.Future<List<_i6.TaskSession>>);

  @override
  _i5.Future<List<_i6.TaskSession>> getTodaysSessions() => (super.noSuchMethod(
        Invocation.method(
          #getTodaysSessions,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.TaskSession>>.value(<_i6.TaskSession>[]),
      ) as _i5.Future<List<_i6.TaskSession>>);

  @override
  _i5.Future<Duration> getTodaysTotalTime() => (super.noSuchMethod(
        Invocation.method(
          #getTodaysTotalTime,
          [],
        ),
        returnValue: _i5.Future<Duration>.value(_FakeDuration_0(
          this,
          Invocation.method(
            #getTodaysTotalTime,
            [],
          ),
        )),
      ) as _i5.Future<Duration>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
