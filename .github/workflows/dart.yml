name: Build and Release

# Release oluÅŸturabilmek iÃ§in gerekli izin
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (Ã¶rn: v1.0.0)'
        required: true
        default: 'v1.0.0'
      create_release:
        description: 'Release oluÅŸturulsun mu?'
        type: boolean
        default: true
      run_tests:
        description: 'Testler Ã§alÄ±ÅŸtÄ±rÄ±lsÄ±n mÄ±?'
        type: boolean
        default: true
      require_tests_pass:
        description: 'Testler geÃ§mek zorunda mÄ±? (false ise baÅŸarÄ±sÄ±z testler releaseâ€™i engellemez)'
        type: boolean
        default: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: time_trapp_linux
          - os: windows-latest
            platform: windows
            artifact_name: time_trapp_windows
          - os: macos-latest
            platform: macos
            artifact_name: time_trapp_macos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          cmake \
          ninja-build \
          pkg-config \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          libx11-dev \
          libxrandr-dev \
          libxi-dev \
          libxcursor-dev \
          libxinerama-dev \
          libgl1-mesa-dev \
          libasound2-dev \
          liblzma-dev \
          libstdc++6

    - name: Flutter pub get
      run: flutter pub get

    # Test adÄ±mÄ±: 
    # - Tag push'ta her zaman Ã§alÄ±ÅŸÄ±r ve geÃ§mek zorundadÄ±r.
    # - workflow_dispatch'ta inputs.run_tests == true ise Ã§alÄ±ÅŸÄ±r.
    # - workflow_dispatch'ta inputs.require_tests_pass == false ise hata job'u dÃ¼ÅŸÃ¼rmez.
    - name: Run tests
      if: ${{ github.event_name != 'workflow_dispatch' || inputs.run_tests == true }}
      run: flutter test
      continue-on-error: ${{ github.event_name == 'workflow_dispatch' && inputs.require_tests_pass == false }}

    - name: Clean build
      run: flutter clean

    - name: Build Linux
      if: matrix.os == 'ubuntu-latest'
      run: flutter build linux --release

    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: flutter build windows --release

    - name: Build macOS
      if: matrix.os == 'macos-latest'
      run: flutter build macos --release

    - name: Create release archive (Linux)
      if: matrix.platform == 'linux'
      run: |
        cd build/linux/x64/release/bundle
        tar -czf "$GITHUB_WORKSPACE/${{ matrix.artifact_name }}.tar.gz" .
        echo "Archive created: $GITHUB_WORKSPACE/${{ matrix.artifact_name }}.tar.gz"
        ls -la "$GITHUB_WORKSPACE/${{ matrix.artifact_name }}.tar.gz"

    - name: Create release archive (Windows)
      if: matrix.platform == 'windows'
      shell: powershell
      run: |
        $sourcePath = "build/windows/x64/runner/Release"
        $zipPath = "$env:GITHUB_WORKSPACE\${{ matrix.artifact_name }}.zip"
        Compress-Archive -Path "$sourcePath\*" -DestinationPath $zipPath -Force
        Write-Host "Created $zipPath"
        Get-ChildItem $zipPath

    - name: Create release archive (macOS)
      if: matrix.platform == 'macos'
      run: |
        APP_NAME="Time Trapp.app"
        APP_DIR="build/macos/Build/Products/Release"
        ditto -c -k --sequesterRsrc --keepParent "$APP_DIR/$APP_NAME" "$GITHUB_WORKSPACE/${{ matrix.artifact_name }}.zip"
        echo "Created $GITHUB_WORKSPACE/${{ matrix.artifact_name }}.zip"
        ls -la "$GITHUB_WORKSPACE/${{ matrix.artifact_name }}.zip"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Tag push ise direkt Ã§alÄ±ÅŸ, workflow_dispatch ise create_release true ise Ã§alÄ±ÅŸ
    if: ${{ startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && (inputs.create_release == true || inputs.create_release == 'true')) }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Debug release condition
      run: |
        echo "event_name=${{ github.event_name }}"
        echo "ref=${{ github.ref }}"
        echo "ref_name=${{ github.ref_name }}"
        echo "inputs.create_release=${{ toJSON(inputs.create_release) }}"
        echo "inputs.release_version=${{ inputs.release_version }}"
        echo "inputs.run_tests=${{ toJSON(inputs.run_tests) }}"
        echo "inputs.require_tests_pass=${{ toJSON(inputs.require_tests_pass) }}"

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: time_trapp_*
        merge-multiple: true  # tÃ¼m artifact'larÄ± Ã§alÄ±ÅŸma dizinine dÃ¼z indir

    - name: List downloaded files
      run: ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.release_version || github.ref_name }}
        target_commitish: ${{ github.sha }}
        name: Time Trapp ${{ inputs.release_version || github.ref_name }}
        body: |
          # Time Trapp ${{ inputs.release_version || github.ref_name }}
          
          ## ðŸŽ‰ Release Notes
          
          Modern, cross-platform time tracking application for desktop.
          
          ### âœ¨ Features
          - One-click session start/stop
          - Real-time tracking with live counter
          - Detailed session management (purpose, goals, links)
          - Daily & hourly analytics
          - Advanced webhook integration with automatic username detection
          - Cross-platform support (macOS, Windows, Linux)
          - Modern Material Design UI
          - System tray integration
          
          ### ðŸ“± Supported Platforms
          - macOS (Intel & Apple Silicon)
          - Windows (x64)
          - Linux (x64)
          
          ### ðŸ”§ Installation
          1. Download the appropriate build for your platform
          2. Extract and run the application
          3. Follow the onboarding process
          4. Start tracking your time!
          
          ### ðŸš€ What's New
          - Automatic system username detection for webhooks
          - Cross-platform username support (Windows, macOS, Linux)
          - Smart username management with fallback options
          - Enhanced webhook reliability and error handling
          - Improved UI performance and state management
          - Comprehensive session filtering and reporting
          
          **Thank you for choosing Time Trapp!** ðŸŽ¯
        files: |
          time_trapp_linux.tar.gz
          time_trapp_windows.zip
          time_trapp_macos.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
