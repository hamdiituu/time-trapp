name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: time_trapp_linux
          - os: windows-latest
            platform: windows
            artifact_name: time_trapp_windows
          - os: macos-latest
            platform: macos
            artifact_name: time_trapp_macos

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    # �� Linux için gerekli kütüphaneleri yükle
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          cmake \
          ninja-build \
          pkg-config \
          libgtk-3-dev \
          liblzma-dev \
          libstdc++-12-dev

    - name: Install dependencies
      run: flutter pub get
# Testler daha sonra kontrol ediliecektir.
#    - name: Run tests
#      run: flutter test

    - name: Build for ${{ matrix.platform }}
      run: |
        if [ "${{ matrix.platform }}" = "linux" ]; then
          flutter build linux --release
        elif [ "${{ matrix.platform }}" = "windows" ]; then
          flutter build windows --release
        elif [ "${{ matrix.platform }}" = "macos" ]; then
          flutter build macos --release
        fi

    # ... geri kalan adımlar aynı
